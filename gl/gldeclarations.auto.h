GLvoid _glAccum(GLenum op __asm("d1"), GLfloat value __asm("d2"));
GLvoid _glAlphaFunc(GLenum func __asm("d1"), GLclampf ref __asm("d2"));
GLboolean _glAreTexturesResident(GLsizei n __asm("d1"), GLuint* textures __asm("d2"), GLboolean* residences __asm("d3"));
GLvoid _glArrayElement(GLint i __asm("d1"));
GLvoid _glBegin(GLenum mode __asm("d1"));
GLvoid _glBindTexture(GLenum target __asm("d1"), GLuint texture __asm("d2"));
GLvoid _glBitmap(GLsizei width __asm("d1"), GLsizei height __asm("d2"), GLfloat xorig __asm("d3"), GLfloat yorig __asm("d4"), GLfloat xmove __asm("d5"), GLfloat ymove __asm("d6"), GLubyte* bitmap __asm("d7"));
GLvoid _glBlendFunc(GLenum sfactor __asm("d1"), GLenum dfactor __asm("d2"));
GLvoid _glCallList(GLuint list __asm("d1"));
GLvoid _glCallLists(GLsizei n __asm("d1"), GLenum type __asm("d2"), GLvoid* lists __asm("d3"));
GLvoid _glClear(GLbitfield mask __asm("d1"));
GLvoid _glClearAccum(GLfloat red __asm("d1"), GLfloat green __asm("d2"), GLfloat blue __asm("d3"), GLfloat alpha __asm("d4"));
GLvoid _glClearColor(GLclampf red __asm("d1"), GLclampf green __asm("d2"), GLclampf blue __asm("d3"), GLclampf alpha __asm("d4"));
GLvoid _glClearDepth(GLclampd depth __asm("fp0"));
GLvoid _glClearIndex(GLfloat c __asm("d1"));
GLvoid _glClearStencil(GLint s __asm("d1"));
GLvoid _glClipPlane(GLenum plane __asm("d1"), GLdouble* equation __asm("d2"));
GLvoid _glColor3b(GLbyte red __asm("d1"), GLbyte green __asm("d2"), GLbyte blue __asm("d3"));
GLvoid _glColor3bv(GLbyte* v __asm("d1"));
GLvoid _glColor3d(GLdouble red __asm("fp0"), GLdouble green __asm("fp1"), GLdouble blue __asm("fp2"));
GLvoid _glColor3dv(GLdouble* v __asm("d1"));
GLvoid _glColor3f(GLfloat red __asm("d1"), GLfloat green __asm("d2"), GLfloat blue __asm("d3"));
GLvoid _glColor3fv(GLfloat* v __asm("d1"));
GLvoid _glColor3i(GLint red __asm("d1"), GLint green __asm("d2"), GLint blue __asm("d3"));
GLvoid _glColor3iv(GLint* v __asm("d1"));
GLvoid _glColor3s(GLshort red __asm("d1"), GLshort green __asm("d2"), GLshort blue __asm("d3"));
GLvoid _glColor3sv(GLshort* v __asm("d1"));
GLvoid _glColor3ub(GLubyte red __asm("d1"), GLubyte green __asm("d2"), GLubyte blue __asm("d3"));
GLvoid _glColor3ubv(GLubyte* v __asm("d1"));
GLvoid _glColor3ui(GLuint red __asm("d1"), GLuint green __asm("d2"), GLuint blue __asm("d3"));
GLvoid _glColor3uiv(GLuint* v __asm("d1"));
GLvoid _glColor3us(GLushort red __asm("d1"), GLushort green __asm("d2"), GLushort blue __asm("d3"));
GLvoid _glColor3usv(GLushort* v __asm("d1"));
GLvoid _glColor4b(GLbyte red __asm("d1"), GLbyte green __asm("d2"), GLbyte blue __asm("d3"), GLbyte alpha __asm("d4"));
GLvoid _glColor4bv(GLbyte* v __asm("d1"));
GLvoid _glColor4d(GLdouble red __asm("fp0"), GLdouble green __asm("fp1"), GLdouble blue __asm("fp2"), GLdouble alpha __asm("fp3"));
GLvoid _glColor4dv(GLdouble* v __asm("d1"));
GLvoid _glColor4f(GLfloat red __asm("d1"), GLfloat green __asm("d2"), GLfloat blue __asm("d3"), GLfloat alpha __asm("d4"));
GLvoid _glColor4fv(GLfloat* v __asm("d1"));
GLvoid _glColor4i(GLint red __asm("d1"), GLint green __asm("d2"), GLint blue __asm("d3"), GLint alpha __asm("d4"));
GLvoid _glColor4iv(GLint* v __asm("d1"));
GLvoid _glColor4s(GLshort red __asm("d1"), GLshort green __asm("d2"), GLshort blue __asm("d3"), GLshort alpha __asm("d4"));
GLvoid _glColor4sv(GLshort* v __asm("d1"));
GLvoid _glColor4ub(GLubyte red __asm("d1"), GLubyte green __asm("d2"), GLubyte blue __asm("d3"), GLubyte alpha __asm("d4"));
GLvoid _glColor4ubv(GLubyte* v __asm("d1"));
GLvoid _glColor4ui(GLuint red __asm("d1"), GLuint green __asm("d2"), GLuint blue __asm("d3"), GLuint alpha __asm("d4"));
GLvoid _glColor4uiv(GLuint* v __asm("d1"));
GLvoid _glColor4us(GLushort red __asm("d1"), GLushort green __asm("d2"), GLushort blue __asm("d3"), GLushort alpha __asm("d4"));
GLvoid _glColor4usv(GLushort* v __asm("d1"));
GLvoid _glColorMask(GLboolean red __asm("d1"), GLboolean green __asm("d2"), GLboolean blue __asm("d3"), GLboolean alpha __asm("d4"));
GLvoid _glColorMaterial(GLenum face __asm("d1"), GLenum mode __asm("d2"));
GLvoid _glColorPointer(GLint size __asm("d1"), GLenum type __asm("d2"), GLsizei stride __asm("d3"), GLvoid* pointer __asm("d4"));
GLvoid _glCopyPixels(GLint x __asm("d1"), GLint y __asm("d2"), GLsizei width __asm("d3"), GLsizei height __asm("d4"), GLenum type __asm("d5"));
GLvoid _glCopyTexImage1D(GLenum target __asm("d1"), GLint level __asm("d2"), GLenum internalFormat __asm("d3"), GLint x __asm("d4"), GLint y __asm("d5"), GLsizei width __asm("d6"), GLint border __asm("d7"));
GLvoid _glCopyTexImage2D(GLenum target __asm("d1"), GLint level __asm("d2"), GLenum internalFormat __asm("d3"), GLint x __asm("d4"), GLint y __asm("d5"), GLsizei width __asm("d6"), GLsizei height __asm("d7"), GLint border __asm("a1"));
GLvoid _glCopyTexSubImage1D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint xoffset __asm("d3"), GLint x __asm("d4"), GLint y __asm("d5"), GLsizei width __asm("d6"));
GLvoid _glCopyTexSubImage2D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint xoffset __asm("d3"), GLint yoffset __asm("d4"), GLint x __asm("d5"), GLint y __asm("d6"), GLsizei width __asm("d7"), GLsizei height __asm("a1"));
GLvoid _glCullFace(GLenum mode __asm("d1"));
GLvoid _glDeleteLists(GLuint list __asm("d1"), GLsizei range __asm("d2"));
GLvoid _glDeleteTextures(GLsizei n __asm("d1"), GLuint* textures __asm("d2"));
GLvoid _glDepthFunc(GLenum func __asm("d1"));
GLvoid _glDepthMask(GLboolean flag __asm("d1"));
GLvoid _glDepthRange(GLclampd zNear __asm("fp0"), GLclampd zFar __asm("fp1"));
GLvoid _glDisable(GLenum cap __asm("d1"));
GLvoid _glDisableClientState(GLenum array __asm("d1"));
GLvoid _glDrawArrays(GLenum mode __asm("d1"), GLint first __asm("d2"), GLsizei count __asm("d3"));
GLvoid _glDrawBuffer(GLenum mode __asm("d1"));
GLvoid _glDrawElements(GLenum mode __asm("d1"), GLsizei count __asm("d2"), GLenum type __asm("d3"), GLvoid* indices __asm("d4"));
GLvoid _glDrawPixels(GLsizei width __asm("d1"), GLsizei height __asm("d2"), GLenum format __asm("d3"), GLenum type __asm("d4"), GLvoid* pixels __asm("d5"));
GLvoid _glEdgeFlag(GLboolean flag __asm("d1"));
GLvoid _glEdgeFlagPointer(GLsizei stride __asm("d1"), GLvoid* pointer __asm("d2"));
GLvoid _glEdgeFlagv(GLboolean* flag __asm("d1"));
GLvoid _glEnable(GLenum cap __asm("d1"));
GLvoid _glEnableClientState(GLenum array __asm("d1"));
GLvoid _glEnd(void);
GLvoid _glEndList(void);
GLvoid _glEvalCoord1d(GLdouble u __asm("fp0"));
GLvoid _glEvalCoord1dv(GLdouble* u __asm("d1"));
GLvoid _glEvalCoord1f(GLfloat u __asm("d1"));
GLvoid _glEvalCoord1fv(GLfloat* u __asm("d1"));
GLvoid _glEvalCoord2d(GLdouble u __asm("fp0"), GLdouble v __asm("fp1"));
GLvoid _glEvalCoord2dv(GLdouble* u __asm("d1"));
GLvoid _glEvalCoord2f(GLfloat u __asm("d1"), GLfloat v __asm("d2"));
GLvoid _glEvalCoord2fv(GLfloat* u __asm("d1"));
GLvoid _glEvalMesh1(GLenum mode __asm("d1"), GLint i1 __asm("d2"), GLint i2 __asm("d3"));
GLvoid _glEvalMesh2(GLenum mode __asm("d1"), GLint i1 __asm("d2"), GLint i2 __asm("d3"), GLint j1 __asm("d4"), GLint j2 __asm("d5"));
GLvoid _glEvalPoint1(GLint i __asm("d1"));
GLvoid _glEvalPoint2(GLint i __asm("d1"), GLint j __asm("d2"));
GLvoid _glFeedbackBuffer(GLsizei size __asm("d1"), GLenum type __asm("d2"), GLfloat* buffer __asm("d3"));
GLvoid _glFinish(void);
GLvoid _glFlush(void);
GLvoid _glFogf(GLenum pname __asm("d1"), GLfloat param __asm("d2"));
GLvoid _glFogfv(GLenum pname __asm("d1"), GLfloat* params __asm("d2"));
GLvoid _glFogi(GLenum pname __asm("d1"), GLint param __asm("d2"));
GLvoid _glFogiv(GLenum pname __asm("d1"), GLint* params __asm("d2"));
GLvoid _glFrontFace(GLenum mode __asm("d1"));
GLvoid _glFrustum(GLdouble left __asm("fp0"), GLdouble right __asm("fp1"), GLdouble bottom __asm("fp2"), GLdouble top __asm("fp3"), GLdouble zNear __asm("fp4"), GLdouble zFar __asm("fp5"));
GLuint _glGenLists(GLsizei range __asm("d1"));
GLvoid _glGenTextures(GLsizei n __asm("d1"), GLuint* textures __asm("d2"));
GLvoid _glGetBooleanv(GLenum pname __asm("d1"), GLboolean* params __asm("d2"));
GLvoid _glGetClipPlane(GLenum plane __asm("d1"), GLdouble* equation __asm("d2"));
GLvoid _glGetDoublev(GLenum pname __asm("d1"), GLdouble* params __asm("d2"));
GLenum _glGetError(void);
GLvoid _glGetFloatv(GLenum pname __asm("d1"), GLfloat* params __asm("d2"));
GLvoid _glGetIntegerv(GLenum pname __asm("d1"), GLint* params __asm("d2"));
GLvoid _glGetLightfv(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glGetLightiv(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glGetMapdv(GLenum target __asm("d1"), GLenum query __asm("d2"), GLdouble* v __asm("d3"));
GLvoid _glGetMapfv(GLenum target __asm("d1"), GLenum query __asm("d2"), GLfloat* v __asm("d3"));
GLvoid _glGetMapiv(GLenum target __asm("d1"), GLenum query __asm("d2"), GLint* v __asm("d3"));
GLvoid _glGetMaterialfv(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glGetMaterialiv(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glGetPixelMapfv(GLenum map __asm("d1"), GLfloat* values __asm("d2"));
GLvoid _glGetPixelMapuiv(GLenum map __asm("d1"), GLuint* values __asm("d2"));
GLvoid _glGetPixelMapusv(GLenum map __asm("d1"), GLushort* values __asm("d2"));
GLvoid _glGetPointerv(GLenum pname __asm("d1"), GLvoid** params __asm("d2"));
GLvoid _glGetPolygonStipple(GLubyte* mask __asm("d1"));
GLubyte* _glGetString(GLenum name __asm("d1"));
GLvoid _glGetTexEnvfv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glGetTexEnviv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glGetTexGendv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLdouble* params __asm("d3"));
GLvoid _glGetTexGenfv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glGetTexGeniv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glGetTexImage(GLenum target __asm("d1"), GLint level __asm("d2"), GLenum format __asm("d3"), GLenum type __asm("d4"), GLvoid* pixels __asm("d5"));
GLvoid _glGetTexLevelParameterfv(GLenum target __asm("d1"), GLint level __asm("d2"), GLenum pname __asm("d3"), GLfloat* params __asm("d4"));
GLvoid _glGetTexLevelParameteriv(GLenum target __asm("d1"), GLint level __asm("d2"), GLenum pname __asm("d3"), GLint* params __asm("d4"));
GLvoid _glGetTexParameterfv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glGetTexParameteriv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glHint(GLenum target __asm("d1"), GLenum mode __asm("d2"));
GLvoid _glIndexMask(GLuint mask __asm("d1"));
GLvoid _glIndexPointer(GLenum type __asm("d1"), GLsizei stride __asm("d2"), GLvoid* pointer __asm("d3"));
GLvoid _glIndexd(GLdouble c __asm("fp0"));
GLvoid _glIndexdv(GLdouble* c __asm("d1"));
GLvoid _glIndexf(GLfloat c __asm("d1"));
GLvoid _glIndexfv(GLfloat* c __asm("d1"));
GLvoid _glIndexi(GLint c __asm("d1"));
GLvoid _glIndexiv(GLint* c __asm("d1"));
GLvoid _glIndexs(GLshort c __asm("d1"));
GLvoid _glIndexsv(GLshort* c __asm("d1"));
GLvoid _glIndexub(GLubyte c __asm("d1"));
GLvoid _glIndexubv(GLubyte* c __asm("d1"));
GLvoid _glInitNames(void);
GLvoid _glInterleavedArrays(GLenum format __asm("d1"), GLsizei stride __asm("d2"), GLvoid* pointer __asm("d3"));
GLboolean _glIsEnabled(GLenum cap __asm("d1"));
GLboolean _glIsList(GLuint list __asm("d1"));
GLboolean _glIsTexture(GLuint texture __asm("d1"));
GLvoid _glLightModelf(GLenum pname __asm("d1"), GLfloat param __asm("d2"));
GLvoid _glLightModelfv(GLenum pname __asm("d1"), GLfloat* params __asm("d2"));
GLvoid _glLightModeli(GLenum pname __asm("d1"), GLint param __asm("d2"));
GLvoid _glLightModeliv(GLenum pname __asm("d1"), GLint* params __asm("d2"));
GLvoid _glLightf(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLfloat param __asm("d3"));
GLvoid _glLightfv(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glLighti(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLint param __asm("d3"));
GLvoid _glLightiv(GLenum light __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glLineStipple(GLint factor __asm("d1"), GLushort pattern __asm("d2"));
GLvoid _glLineWidth(GLfloat width __asm("d1"));
GLvoid _glListBase(GLuint base __asm("d1"));
GLvoid _glLoadIdentity(void);
GLvoid _glLoadMatrixd(GLdouble* m __asm("d1"));
GLvoid _glLoadMatrixf(GLfloat* m __asm("d1"));
GLvoid _glLoadName(GLuint name __asm("d1"));
GLvoid _glLogicOp(GLenum opcode __asm("d1"));
GLvoid _glMap1d(GLenum target __asm("d1"), GLdouble u1 __asm("fp0"), GLdouble u2 __asm("fp1"), GLint stride __asm("d6"), GLint order __asm("d7"), GLdouble* points __asm("a1"));
GLvoid _glMap1f(GLenum target __asm("d1"), GLfloat u1 __asm("d2"), GLfloat u2 __asm("d3"), GLint stride __asm("d4"), GLint order __asm("d5"), GLfloat* points __asm("d6"));
GLvoid _glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
GLvoid _glMap2f(GLenum target __asm("d1"), GLfloat u1 __asm("d2"), GLfloat u2 __asm("d3"), GLint ustride __asm("d4"), GLint uorder __asm("d5"), GLfloat v1 __asm("d6"), GLfloat v2 __asm("d7"), GLint vstride __asm("a1"), GLint vorder __asm("a2"), GLfloat* points __asm("a3"));
GLvoid _glMapGrid1d(GLint un __asm("d1"), GLdouble u1 __asm("fp0"), GLdouble u2 __asm("fp1"));
GLvoid _glMapGrid1f(GLint un __asm("d1"), GLfloat u1 __asm("d2"), GLfloat u2 __asm("d3"));
GLvoid _glMapGrid2d(GLint un __asm("d1"), GLdouble u1 __asm("fp0"), GLdouble u2 __asm("fp1"), GLint vn __asm("d6"), GLdouble v1 __asm("fp2"), GLdouble v2 __asm("fp3"));
GLvoid _glMapGrid2f(GLint un __asm("d1"), GLfloat u1 __asm("d2"), GLfloat u2 __asm("d3"), GLint vn __asm("d4"), GLfloat v1 __asm("d5"), GLfloat v2 __asm("d6"));
GLvoid _glMaterialf(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLfloat param __asm("d3"));
GLvoid _glMaterialfv(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glMateriali(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLint param __asm("d3"));
GLvoid _glMaterialiv(GLenum face __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glMatrixMode(GLenum mode __asm("d1"));
GLvoid _glMultMatrixd(GLdouble* m __asm("d1"));
GLvoid _glMultMatrixf(GLfloat* m __asm("d1"));
GLvoid _glNewList(GLuint list __asm("d1"), GLenum mode __asm("d2"));
GLvoid _glNormal3b(GLbyte nx __asm("d1"), GLbyte ny __asm("d2"), GLbyte nz __asm("d3"));
GLvoid _glNormal3bv(GLbyte* v __asm("d1"));
GLvoid _glNormal3d(GLdouble nx __asm("fp0"), GLdouble ny __asm("fp1"), GLdouble nz __asm("fp2"));
GLvoid _glNormal3dv(GLdouble* v __asm("d1"));
GLvoid _glNormal3f(GLfloat nx __asm("d1"), GLfloat ny __asm("d2"), GLfloat nz __asm("d3"));
GLvoid _glNormal3fv(GLfloat* v __asm("d1"));
GLvoid _glNormal3i(GLint nx __asm("d1"), GLint ny __asm("d2"), GLint nz __asm("d3"));
GLvoid _glNormal3iv(GLint* v __asm("d1"));
GLvoid _glNormal3s(GLshort nx __asm("d1"), GLshort ny __asm("d2"), GLshort nz __asm("d3"));
GLvoid _glNormal3sv(GLshort* v __asm("d1"));
GLvoid _glNormalPointer(GLenum type __asm("d1"), GLsizei stride __asm("d2"), GLvoid* pointer __asm("d3"));
GLvoid _glOrtho(GLdouble left __asm("fp0"), GLdouble right __asm("fp1"), GLdouble bottom __asm("fp2"), GLdouble top __asm("fp3"), GLdouble zNear __asm("fp4"), GLdouble zFar __asm("fp5"));
GLvoid _glPassThrough(GLfloat token __asm("d1"));
GLvoid _glPixelMapfv(GLenum map __asm("d1"), GLsizei mapsize __asm("d2"), GLfloat* values __asm("d3"));
GLvoid _glPixelMapuiv(GLenum map __asm("d1"), GLsizei mapsize __asm("d2"), GLuint* values __asm("d3"));
GLvoid _glPixelMapusv(GLenum map __asm("d1"), GLsizei mapsize __asm("d2"), GLushort* values __asm("d3"));
GLvoid _glPixelStoref(GLenum pname __asm("d1"), GLfloat param __asm("d2"));
GLvoid _glPixelStorei(GLenum pname __asm("d1"), GLint param __asm("d2"));
GLvoid _glPixelTransferf(GLenum pname __asm("d1"), GLfloat param __asm("d2"));
GLvoid _glPixelTransferi(GLenum pname __asm("d1"), GLint param __asm("d2"));
GLvoid _glPixelZoom(GLfloat xfactor __asm("d1"), GLfloat yfactor __asm("d2"));
GLvoid _glPointSize(GLfloat size __asm("d1"));
GLvoid _glPolygonMode(GLenum face __asm("d1"), GLenum mode __asm("d2"));
GLvoid _glPolygonOffset(GLfloat factor __asm("d1"), GLfloat units __asm("d2"));
GLvoid _glPolygonStipple(GLubyte* mask __asm("d1"));
GLvoid _glPopAttrib(void);
GLvoid _glPopClientAttrib(void);
GLvoid _glPopMatrix(void);
GLvoid _glPopName(void);
GLvoid _glPrioritizeTextures(GLsizei n __asm("d1"), GLuint* textures __asm("d2"), GLclampf* priorities __asm("d3"));
GLvoid _glPushAttrib(GLbitfield mask __asm("d1"));
GLvoid _glPushClientAttrib(GLbitfield mask __asm("d1"));
GLvoid _glPushMatrix(void);
GLvoid _glPushName(GLuint name __asm("d1"));
GLvoid _glRasterPos2d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"));
GLvoid _glRasterPos2dv(GLdouble* v __asm("d1"));
GLvoid _glRasterPos2f(GLfloat x __asm("d1"), GLfloat y __asm("d2"));
GLvoid _glRasterPos2fv(GLfloat* v __asm("d1"));
GLvoid _glRasterPos2i(GLint x __asm("d1"), GLint y __asm("d2"));
GLvoid _glRasterPos2iv(GLint* v __asm("d1"));
GLvoid _glRasterPos2s(GLshort x __asm("d1"), GLshort y __asm("d2"));
GLvoid _glRasterPos2sv(GLshort* v __asm("d1"));
GLvoid _glRasterPos3d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"));
GLvoid _glRasterPos3dv(GLdouble* v __asm("d1"));
GLvoid _glRasterPos3f(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"));
GLvoid _glRasterPos3fv(GLfloat* v __asm("d1"));
GLvoid _glRasterPos3i(GLint x __asm("d1"), GLint y __asm("d2"), GLint z __asm("d3"));
GLvoid _glRasterPos3iv(GLint* v __asm("d1"));
GLvoid _glRasterPos3s(GLshort x __asm("d1"), GLshort y __asm("d2"), GLshort z __asm("d3"));
GLvoid _glRasterPos3sv(GLshort* v __asm("d1"));
GLvoid _glRasterPos4d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"), GLdouble w __asm("fp3"));
GLvoid _glRasterPos4dv(GLdouble* v __asm("d1"));
GLvoid _glRasterPos4f(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"), GLfloat w __asm("d4"));
GLvoid _glRasterPos4fv(GLfloat* v __asm("d1"));
GLvoid _glRasterPos4i(GLint x __asm("d1"), GLint y __asm("d2"), GLint z __asm("d3"), GLint w __asm("d4"));
GLvoid _glRasterPos4iv(GLint* v __asm("d1"));
GLvoid _glRasterPos4s(GLshort x __asm("d1"), GLshort y __asm("d2"), GLshort z __asm("d3"), GLshort w __asm("d4"));
GLvoid _glRasterPos4sv(GLshort* v __asm("d1"));
GLvoid _glReadBuffer(GLenum mode __asm("d1"));
GLvoid _glReadPixels(GLint x __asm("d1"), GLint y __asm("d2"), GLsizei width __asm("d3"), GLsizei height __asm("d4"), GLenum format __asm("d5"), GLenum type __asm("d6"), GLvoid* pixels __asm("d7"));
GLvoid _glRectd(GLdouble x1 __asm("fp0"), GLdouble y1 __asm("fp1"), GLdouble x2 __asm("fp2"), GLdouble y2 __asm("fp3"));
GLvoid _glRectdv(GLdouble* v1 __asm("d1"), GLdouble* v2 __asm("d2"));
GLvoid _glRectf(GLfloat x1 __asm("d1"), GLfloat y1 __asm("d2"), GLfloat x2 __asm("d3"), GLfloat y2 __asm("d4"));
GLvoid _glRectfv(GLfloat* v1 __asm("d1"), GLfloat* v2 __asm("d2"));
GLvoid _glRecti(GLint x1 __asm("d1"), GLint y1 __asm("d2"), GLint x2 __asm("d3"), GLint y2 __asm("d4"));
GLvoid _glRectiv(GLint* v1 __asm("d1"), GLint* v2 __asm("d2"));
GLvoid _glRects(GLshort x1 __asm("d1"), GLshort y1 __asm("d2"), GLshort x2 __asm("d3"), GLshort y2 __asm("d4"));
GLvoid _glRectsv(GLshort* v1 __asm("d1"), GLshort* v2 __asm("d2"));
GLint _glRenderMode(GLenum mode __asm("d1"));
GLvoid _glRotated(GLdouble ane __asm("fp0"), GLdouble x __asm("fp1"), GLdouble y __asm("fp2"), GLdouble z __asm("fp3"));
GLvoid _glRotatef(GLfloat ane __asm("d1"), GLfloat x __asm("d2"), GLfloat y __asm("d3"), GLfloat z __asm("d4"));
GLvoid _glScaled(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"));
GLvoid _glScalef(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"));
GLvoid _glScissor(GLint x __asm("d1"), GLint y __asm("d2"), GLsizei width __asm("d3"), GLsizei height __asm("d4"));
GLvoid _glSelectBuffer(GLsizei size __asm("d1"), GLuint* buffer __asm("d2"));
GLvoid _glShadeModel(GLenum mode __asm("d1"));
GLvoid _glStencilFunc(GLenum func __asm("d1"), GLint ref __asm("d2"), GLuint mask __asm("d3"));
GLvoid _glStencilMask(GLuint mask __asm("d1"));
GLvoid _glStencilOp(GLenum fail __asm("d1"), GLenum zfail __asm("d2"), GLenum zpass __asm("d3"));
GLvoid _glTexCoord1d(GLdouble s __asm("fp0"));
GLvoid _glTexCoord1dv(GLdouble* v __asm("d1"));
GLvoid _glTexCoord1f(GLfloat s __asm("d1"));
GLvoid _glTexCoord1fv(GLfloat* v __asm("d1"));
GLvoid _glTexCoord1i(GLint s __asm("d1"));
GLvoid _glTexCoord1iv(GLint* v __asm("d1"));
GLvoid _glTexCoord1s(GLshort s __asm("d1"));
GLvoid _glTexCoord1sv(GLshort* v __asm("d1"));
GLvoid _glTexCoord2d(GLdouble s __asm("fp0"), GLdouble t __asm("fp1"));
GLvoid _glTexCoord2dv(GLdouble* v __asm("d1"));
GLvoid _glTexCoord2f(GLfloat s __asm("d1"), GLfloat t __asm("d2"));
GLvoid _glTexCoord2fv(GLfloat* v __asm("d1"));
GLvoid _glTexCoord2i(GLint s __asm("d1"), GLint t __asm("d2"));
GLvoid _glTexCoord2iv(GLint* v __asm("d1"));
GLvoid _glTexCoord2s(GLshort s __asm("d1"), GLshort t __asm("d2"));
GLvoid _glTexCoord2sv(GLshort* v __asm("d1"));
GLvoid _glTexCoord3d(GLdouble s __asm("fp0"), GLdouble t __asm("fp1"), GLdouble r __asm("fp2"));
GLvoid _glTexCoord3dv(GLdouble* v __asm("d1"));
GLvoid _glTexCoord3f(GLfloat s __asm("d1"), GLfloat t __asm("d2"), GLfloat r __asm("d3"));
GLvoid _glTexCoord3fv(GLfloat* v __asm("d1"));
GLvoid _glTexCoord3i(GLint s __asm("d1"), GLint t __asm("d2"), GLint r __asm("d3"));
GLvoid _glTexCoord3iv(GLint* v __asm("d1"));
GLvoid _glTexCoord3s(GLshort s __asm("d1"), GLshort t __asm("d2"), GLshort r __asm("d3"));
GLvoid _glTexCoord3sv(GLshort* v __asm("d1"));
GLvoid _glTexCoord4d(GLdouble s __asm("fp0"), GLdouble t __asm("fp1"), GLdouble r __asm("fp2"), GLdouble q __asm("fp3"));
GLvoid _glTexCoord4dv(GLdouble* v __asm("d1"));
GLvoid _glTexCoord4f(GLfloat s __asm("d1"), GLfloat t __asm("d2"), GLfloat r __asm("d3"), GLfloat q __asm("d4"));
GLvoid _glTexCoord4fv(GLfloat* v __asm("d1"));
GLvoid _glTexCoord4i(GLint s __asm("d1"), GLint t __asm("d2"), GLint r __asm("d3"), GLint q __asm("d4"));
GLvoid _glTexCoord4iv(GLint* v __asm("d1"));
GLvoid _glTexCoord4s(GLshort s __asm("d1"), GLshort t __asm("d2"), GLshort r __asm("d3"), GLshort q __asm("d4"));
GLvoid _glTexCoord4sv(GLshort* v __asm("d1"));
GLvoid _glTexCoordPointer(GLint size __asm("d1"), GLenum type __asm("d2"), GLsizei stride __asm("d3"), GLvoid* pointer __asm("d4"));
GLvoid _glTexEnvf(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat param __asm("d3"));
GLvoid _glTexEnvfv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glTexEnvi(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint param __asm("d3"));
GLvoid _glTexEnviv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glTexGend(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLdouble param __asm("fp0"));
GLvoid _glTexGendv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLdouble* params __asm("d3"));
GLvoid _glTexGenf(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLfloat param __asm("d3"));
GLvoid _glTexGenfv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glTexGeni(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLint param __asm("d3"));
GLvoid _glTexGeniv(GLenum coord __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glTexImage1D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint internalformat __asm("d3"), GLsizei width __asm("d4"), GLint border __asm("d5"), GLenum format __asm("d6"), GLenum type __asm("d7"), GLvoid* pixels __asm("a1"));
GLvoid _glTexImage2D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint internalformat __asm("d3"), GLsizei width __asm("d4"), GLsizei height __asm("d5"), GLint border __asm("d6"), GLenum format __asm("d7"), GLenum type __asm("a1"), GLvoid* pixels __asm("a2"));
GLvoid _glTexParameterf(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat param __asm("d3"));
GLvoid _glTexParameterfv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLfloat* params __asm("d3"));
GLvoid _glTexParameteri(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint param __asm("d3"));
GLvoid _glTexParameteriv(GLenum target __asm("d1"), GLenum pname __asm("d2"), GLint* params __asm("d3"));
GLvoid _glTexSubImage1D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint xoffset __asm("d3"), GLsizei width __asm("d4"), GLenum format __asm("d5"), GLenum type __asm("d6"), GLvoid* pixels __asm("d7"));
GLvoid _glTexSubImage2D(GLenum target __asm("d1"), GLint level __asm("d2"), GLint xoffset __asm("d3"), GLint yoffset __asm("d4"), GLsizei width __asm("d5"), GLsizei height __asm("d6"), GLenum format __asm("d7"), GLenum type __asm("a1"), GLvoid* pixels __asm("a2"));
GLvoid _glTranslated(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"));
GLvoid _glTranslatef(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"));
GLvoid _glVertex2d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"));
GLvoid _glVertex2dv(GLdouble* v __asm("d1"));
GLvoid _glVertex2f(GLfloat x __asm("d1"), GLfloat y __asm("d2"));
GLvoid _glVertex2fv(GLfloat* v __asm("d1"));
GLvoid _glVertex2i(GLint x __asm("d1"), GLint y __asm("d2"));
GLvoid _glVertex2iv(GLint* v __asm("d1"));
GLvoid _glVertex2s(GLshort x __asm("d1"), GLshort y __asm("d2"));
GLvoid _glVertex2sv(GLshort* v __asm("d1"));
GLvoid _glVertex3d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"));
GLvoid _glVertex3dv(GLdouble* v __asm("d1"));
GLvoid _glVertex3f(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"));
GLvoid _glVertex3fv(GLfloat* v __asm("d1"));
GLvoid _glVertex3i(GLint x __asm("d1"), GLint y __asm("d2"), GLint z __asm("d3"));
GLvoid _glVertex3iv(GLint* v __asm("d1"));
GLvoid _glVertex3s(GLshort x __asm("d1"), GLshort y __asm("d2"), GLshort z __asm("d3"));
GLvoid _glVertex3sv(GLshort* v __asm("d1"));
GLvoid _glVertex4d(GLdouble x __asm("fp0"), GLdouble y __asm("fp1"), GLdouble z __asm("fp2"), GLdouble w __asm("fp3"));
GLvoid _glVertex4dv(GLdouble* v __asm("d1"));
GLvoid _glVertex4f(GLfloat x __asm("d1"), GLfloat y __asm("d2"), GLfloat z __asm("d3"), GLfloat w __asm("d4"));
GLvoid _glVertex4fv(GLfloat* v __asm("d1"));
GLvoid _glVertex4i(GLint x __asm("d1"), GLint y __asm("d2"), GLint z __asm("d3"), GLint w __asm("d4"));
GLvoid _glVertex4iv(GLint* v __asm("d1"));
GLvoid _glVertex4s(GLshort x __asm("d1"), GLshort y __asm("d2"), GLshort z __asm("d3"), GLshort w __asm("d4"));
GLvoid _glVertex4sv(GLshort* v __asm("d1"));
GLvoid _glVertexPointer(GLint size __asm("d1"), GLenum type __asm("d2"), GLsizei stride __asm("d3"), GLvoid* pointer __asm("d4"));
GLvoid _glViewport(GLint x __asm("d1"), GLint y __asm("d2"), GLsizei width __asm("d3"), GLsizei height __asm("d4"));
