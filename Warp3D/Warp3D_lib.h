#ifndef _INCLUDE_WARP3D_H
#define _INCLUDE_WARP3D_H

/*
 * File generated by StormLink from Warp3D.fd
 * DO NOT EDIT
 * $VER: Warp3D.library 4.2 (20-Jun-03)
 */
#ifdef __cplusplus
extern "C" {
#endif
#pragma tagcall(Warp3DBase, -30, W3D_CreateContext(a0, a1))
#pragma amicall(Warp3DBase, -36, W3D_DestroyContext(a0))
#pragma amicall(Warp3DBase, -42, W3D_GetState(a0, d1))
#pragma amicall(Warp3DBase, -48, W3D_SetState(a0, d0, d1))
#pragma amicall(Warp3DBase, -54, W3D_CheckDriver())
#pragma amicall(Warp3DBase, -60, W3D_LockHardware(a0))
#pragma amicall(Warp3DBase, -66, W3D_UnLockHardware(a0))
#pragma amicall(Warp3DBase, -72, W3D_WaitIdle(a0))
#pragma amicall(Warp3DBase, -78, W3D_CheckIdle(a0))
#pragma amicall(Warp3DBase, -84, W3D_Query(a0, d0, d1))
#pragma amicall(Warp3DBase, -90, W3D_GetTexFmtInfo(a0, d0, d1))
#pragma tagcall(Warp3DBase, -96, W3D_AllocTexObj(a0, a1, a2))
#pragma amicall(Warp3DBase, -102, W3D_FreeTexObj(a0, a1))
#pragma amicall(Warp3DBase, -108, W3D_ReleaseTexture(a0, a1))
#pragma amicall(Warp3DBase, -114, W3D_FlushTextures(a0))
#pragma amicall(Warp3DBase, -120, W3D_SetFilter(a0, a1, d0, d1))
#pragma amicall(Warp3DBase, -126, W3D_SetTexEnv(a0, a1, d1, a2))
#pragma amicall(Warp3DBase, -132, W3D_SetWrapMode(a0, a1, d0, d1, a2))
#pragma amicall(Warp3DBase, -138, W3D_UpdateTexImage(a0, a1, a2, d1, a3))
#pragma amicall(Warp3DBase, -144, W3D_UploadTexture(a0, a1))
#pragma amicall(Warp3DBase, -150, W3D_DrawLine(a0, a1))
#pragma amicall(Warp3DBase, -156, W3D_DrawPoint(a0, a1))
#pragma amicall(Warp3DBase, -162, W3D_DrawTriangle(a0, a1))
#pragma amicall(Warp3DBase, -168, W3D_DrawTriFan(a0, a1))
#pragma amicall(Warp3DBase, -174, W3D_DrawTriStrip(a0, a1))
#pragma amicall(Warp3DBase, -180, W3D_SetAlphaMode(a0, d1, a1))
#pragma amicall(Warp3DBase, -186, W3D_SetBlendMode(a0, d0, d1))
#pragma amicall(Warp3DBase, -192, W3D_SetDrawRegion(a0, a1, d1, a2))
#pragma amicall(Warp3DBase, -198, W3D_SetFogParams(a0, a1, d1))
#pragma amicall(Warp3DBase, -204, W3D_SetColorMask(a0, d0, d1, d2, d3))
#pragma amicall(Warp3DBase, -210, W3D_SetStencilFunc(a0, d0, d1, d2))
#pragma amicall(Warp3DBase, -216, W3D_AllocZBuffer(a0))
#pragma amicall(Warp3DBase, -222, W3D_FreeZBuffer(a0))
#pragma amicall(Warp3DBase, -228, W3D_ClearZBuffer(a0, a1))
#pragma amicall(Warp3DBase, -234, W3D_ReadZPixel(a0, d0, d1, a1))
#pragma amicall(Warp3DBase, -240, W3D_ReadZSpan(a0, d0, d1, d2, a1))
#pragma amicall(Warp3DBase, -246, W3D_SetZCompareMode(a0, d1))
#pragma amicall(Warp3DBase, -252, W3D_AllocStencilBuffer(a0))
#pragma amicall(Warp3DBase, -258, W3D_ClearStencilBuffer(a0, a1))
#pragma amicall(Warp3DBase, -264, W3D_FillStencilBuffer(a0, d0, d1, d2, d3, d4, a1))
#pragma amicall(Warp3DBase, -270, W3D_FreeStencilBuffer(a0))
#pragma amicall(Warp3DBase, -276, W3D_ReadStencilPixel(a0, d0, d1, a1))
#pragma amicall(Warp3DBase, -282, W3D_ReadStencilSpan(a0, d0, d1, d2, a1))
#pragma amicall(Warp3DBase, -288, W3D_SetLogicOp(a0, d1))
#pragma amicall(Warp3DBase, -294, W3D_Hint(a0, d0, d1))
#pragma amicall(Warp3DBase, -300, W3D_SetDrawRegionWBM(a0, a1, a2))
#pragma amicall(Warp3DBase, -306, W3D_GetDriverState(a0))
#pragma amicall(Warp3DBase, -312, W3D_Flush(a0))
#pragma amicall(Warp3DBase, -318, W3D_SetPenMask(a0, d1))
#pragma amicall(Warp3DBase, -324, W3D_SetStencilOp(a0, d0, d1, d2))
#pragma amicall(Warp3DBase, -330, W3D_SetWriteMask(a0, d1))
#pragma amicall(Warp3DBase, -336, W3D_WriteStencilPixel(a0, d0, d1, d2))
#pragma amicall(Warp3DBase, -342, W3D_WriteStencilSpan(a0, d0, d1, d2, a1, a2))
#pragma amicall(Warp3DBase, -348, W3D_WriteZPixel(a0, d0, d1, a1))
#pragma amicall(Warp3DBase, -354, W3D_WriteZSpan(a0, d0, d1, d2, a1, a2))
#pragma amicall(Warp3DBase, -360, W3D_SetCurrentColor(a0, a1))
#pragma amicall(Warp3DBase, -366, W3D_SetCurrentPen(a0, d1))
#pragma amicall(Warp3DBase, -372, W3D_UpdateTexSubImage(a0, a1, a2, d1, a3, a4, d0))
#pragma amicall(Warp3DBase, -378, W3D_FreeAllTexObj(a0))
#pragma amicall(Warp3DBase, -384, W3D_GetDestFmt())
#pragma amicall(Warp3DBase, -390, W3D_DrawLineStrip(a0, a1))
#pragma amicall(Warp3DBase, -396, W3D_DrawLineLoop(a0, a1))
#pragma amicall(Warp3DBase, -402, W3D_GetDrivers())
#pragma amicall(Warp3DBase, -408, W3D_QueryDriver(a0, d0, d1))
#pragma amicall(Warp3DBase, -414, W3D_GetDriverTexFmtInfo(a0, d0, d1))
#pragma amicall(Warp3DBase, -420, W3D_RequestMode(a0))
#pragma amicall(Warp3DBase, -426, W3D_SetScissor(a0, a1))
#pragma amicall(Warp3DBase, -432, W3D_FlushFrame(a0))
#pragma amicall(Warp3DBase, -438, W3D_TestMode(d0))
#pragma amicall(Warp3DBase, -444, W3D_SetChromaTestBounds(a0, a1, d0, d1, d2))
#pragma amicall(Warp3DBase, -450, W3D_ClearDrawRegion(a0, d0))
#pragma amicall(Warp3DBase, -456, W3D_DrawTriangleV(a0, a1))
#pragma amicall(Warp3DBase, -462, W3D_DrawTriFanV(a0, a1))
#pragma amicall(Warp3DBase, -468, W3D_DrawTriStripV(a0, a1))
#pragma amicall(Warp3DBase, -474, W3D_GetScreenmodeList())
#pragma amicall(Warp3DBase, -480, W3D_FreeScreenmodeList(a0))
#pragma tagcall(Warp3DBase, -486, W3D_BestModeID(a0))
#pragma amicall(Warp3DBase, -492, W3D_VertexPointer(a0, a1, d0, d1, d2))
#pragma amicall(Warp3DBase, -498, W3D_TexCoordPointer(a0, a1, d0, d1, d2, d3, d4))
#pragma amicall(Warp3DBase, -504, W3D_ColorPointer(a0, a1, d0, d1, d2, d3))
#pragma amicall(Warp3DBase, -510, W3D_BindTexture(a0, d0, a1))
#pragma amicall(Warp3DBase, -516, W3D_DrawArray(a0, d0, d1, d2))
#pragma amicall(Warp3DBase, -522, W3D_DrawElements(a0, d0, d1, d2, a1))
#pragma amicall(Warp3DBase, -528, W3D_SetFrontFace(a0, d0))
#ifdef __cplusplus
};
#endif
#endif
